{"version":3,"sources":["components/header.js","components/slider.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","src","alt","type","Component","SimpleSlider","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","API","Hourly","error","GenerateBox","bind","assertThisInitialized","data","index","key","concat","weather","id","description","temp","day","min","max","title","humidity","speed","Math","abs","pressure","clouds","main","temp_min","temp_max","dt_txt","split","wind","all","_this2","axios","get","stateValue","_state","_country","then","response","setState","list","catch","console","log","_this3","settings","dots","slidesToShow","responsive","breakpoint","lib_default","map","i","GenerateHourly","React","Main","showWeather","handleButton","handleChangeText","e","target","name","value","onChange","onClick","slider_SimpleSlider","App","header_Header","main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9d335ff.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"header\">\r\n        <a href=\"#test\">\r\n            <img src=\"https://logos.textgiraffe.com/logos/logo-name/Prasanna-designstyle-kiddo-m.png\" alt=\"Logo\" className=\"logo\"/>\r\n        </a>\r\n        <div className=\"headerRight\">\r\n            <div></div>\r\n            <button type=\"button\" className=\"btn\">\r\n                    <span>Prasanna Brabourame</span>\r\n            </button>\r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport axios from 'axios';\r\n\r\nexport default class SimpleSlider extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {API:[],Hourly:[],error:false};\r\n        this.GenerateBox = this.GenerateBox.bind(this);\r\n    }\r\n\r\n    GenerateBox(data, index){\r\n      return (\r\n         <div key={index}>\r\n        <div className=\"widget\">\r\n                  <div className=\"widget__inner\">\r\n                     <span className=\"icon\">\r\n                     <i className={`wi wi-owm-night-${data.weather[0].id}`}></i>\r\n                     </span>\r\n                     <p className=\"status\">{data.weather[0].description}</p>\r\n                  </div>\r\n                  <div className=\"widget__inner\">\r\n                     <p className=\"temp\">{data.temp.day}°</p>\r\n                     <p className=\"temp-range\">{data.temp.min}-{data.temp.max}°</p>\r\n                  </div>\r\n                  <div className=\"widget__inner\">\r\n                     <p title=\"humidity\">\r\n                        <span className=\"icon\">\r\n                        <i className=\"wi wi-raindrop\"></i>\r\n                        </span>{data.humidity}\r\n                        <span>%</span>\r\n                     </p>\r\n                     <p title=\"wind and speed direction\">\r\n                        <span className=\"icon\">\r\n                        <i className=\"wi wi-direction-up-right\"></i>\r\n                        </span>{data.speed}\r\n                        <span> m/s</span>\r\n                     </p>\r\n                     <p title=\"pressure\">\r\n                        <span className=\"icon\">\r\n                        <i className=\"wi wi-thermometer\"></i>\r\n                        </span>{Math.abs(data.pressure)}\r\n                     </p>\r\n                     <p title=\"cloudiness\">\r\n                        <span className=\"icon\">\r\n                        <i className=\"wi wi-cloud\"></i>\r\n                        </span>{data.clouds}\r\n                        <span>%</span>\r\n                     </p>\r\n                  </div>\r\n               </div>\r\n      </div>\r\n      )\r\n    }\r\n\r\n    GenerateHourly(data, index){\r\n      return (\r\n         <div key={index}>\r\n               <div className=\"widget\">\r\n                     <div className=\"widget__inner\">\r\n                        <span className=\"icon\">\r\n                        <i className={`wi wi-owm-night-${data.weather[0].id}`}></i>\r\n                        </span>\r\n                        <p className=\"status\">{data.weather[0].description}</p>\r\n                     </div>\r\n                  <div className=\"widget__inner\">\r\n                     <p className=\"temp\">{data.main.temp}°</p>\r\n                     <p className=\"temp-range\">{data.main.temp_min}-{data.main.temp_max}°</p>\r\n                       <p className=\"TimePeriod\">{data.dt_txt.split(' ')[1]}</p>\r\n                  </div>\r\n                  <div className=\"widget__inner\">\r\n                     <p title=\"humidity\">\r\n                        <span className=\"icon\">\r\n                        <i className=\"wi wi-raindrop\"></i>\r\n                        </span>{data.main.humidity}\r\n                        <span>%</span>\r\n                     </p>\r\n                     <p title=\"wind and speed direction\">\r\n                        <span className=\"icon\">\r\n                        <i className=\"wi wi-direction-up-right\"></i>\r\n                        </span>{data.wind.speed}\r\n                        <span> m/s</span>\r\n                     </p>\r\n                     <p title=\"pressure\">\r\n                        <span className=\"icon\">\r\n                        <i className=\"wi wi-thermometer\"></i>\r\n                        </span>{Math.abs(data.main.pressure)}\r\n                     </p>\r\n                     <p title=\"cloudiness\">\r\n                        <span className=\"icon\">\r\n                        <i className=\"wi wi-cloud\"></i>\r\n                        </span>{data.clouds.all}\r\n                        <span>%</span>\r\n                     </p>\r\n                     </div>\r\n               </div>\r\n         </div>\r\n      )\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(`http://api.openweathermap.org/data/2.5/forecast/daily?q=${this.props.stateValue._state},${this.props.stateValue._country}&units=metric&mode=JSON&appid=77e577e4c9e13e85b8e39f71194aea31`)\r\n        .then((response) => {\r\n           this.setState({error:false});\r\n           this.setState({API:response.data.list})\r\n        })\r\n        .catch((error) =>{\r\n             this.setState({error:true});\r\n            console.log(error);\r\n        });\r\n        axios.get(`http://api.openweathermap.org/data/2.5/forecast?q=${this.props.stateValue._state},${this.props.stateValue._country}&units=metric&mode=JSON&appid=77e577e4c9e13e85b8e39f71194aea31`)\r\n        .then((response) => {\r\n            this.setState({error:false});\r\n           this.setState({Hourly:response.data.list})\r\n        })\r\n        .catch((error) => {\r\n            this.setState({error:true});\r\n        });\r\n        \r\n    }\r\n    render() {\r\n        var settings = {\r\n                dots: false,\r\n                slidesToShow: 2,\r\n                responsive: [\r\n                  {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                      slidesToShow: 2,\r\n                    }\r\n                  },\r\n                  {\r\n                    breakpoint: 800,\r\n                    settings: {\r\n                      slidesToShow: 1\r\n                    }\r\n                  },\r\n                  {\r\n                    breakpoint: 480,\r\n                    settings: {\r\n                      slidesToShow: 1\r\n                    }\r\n                  }\r\n                ]\r\n            };\r\n\r\n            if(this.state.error){\r\n               return (<div>Invalid Details</div>)\r\n\r\n            }else{\r\n               return (\r\n                  <div>\r\n                      <Slider {...settings}>\r\n                            {this.state.Hourly.map((data, i) => this.GenerateHourly(data, i))}\r\n                      </Slider>\r\n                      <br/>\r\n                      <Slider {...settings}>\r\n                            {this.state.API.map((data, i) => this.GenerateBox(data, i))}\r\n                      </Slider>\r\n                  </div>\r\n               );\r\n            }\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport SimpleSlider from './slider'\r\n\r\nexport default class Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            _state:'Chennai',\r\n            _country:'IN',\r\n            showWeather:false\r\n        }\r\n        this.handleButton = this.handleButton.bind(this);\r\n        this.handleChangeText = this.handleChangeText.bind(this);\r\n    }\r\n\r\n\r\n    handleChangeText(e){\r\n        this.setState({showWeather:false});\r\n        if(e.target.name === 'State'){\r\n            this.setState({_state:e.target.value})\r\n        }else{\r\n            this.setState({_country:e.target.value})\r\n        }\r\n    }\r\n\r\n    handleButton(){\r\n        this.setState({showWeather:true});\r\n    }\r\n    render() {\r\n      return (\r\n        <div className=\"main-section\">\r\n        <div className=\"loan\">\r\n        <h2 className='text-center'>Weather Application</h2>\r\n              <div className='text-center'>Prasanna Brabourame</div>\r\n              <div className=\"clear\"></div>\r\n              <div className=\"line\"></div>\r\n              <div className=\"form-left app-col-12 form_operation\" >\r\n                <div className=\"form-row\">\r\n                  <div className=\"app-col-6 form-left\">\r\n                      <label>State</label>\r\n                      <input type=\"text\" name=\"State\" onChange={(e)=>this.handleChangeText(e)} value={this.state._state} />\r\n                  </div>\r\n                  <div className=\"app-col-6\">\r\n                  <label>Country</label>\r\n                      <input type=\"text\" name=\"Country\" onChange={(e)=>this.handleChangeText(e)} value={this.state._country} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"clear\"></div>\r\n              </div>\r\n              <div className=\"form-row text-center\">\r\n                  <button className=\"submit-btn\" onClick={(e)=>this.handleButton(e)} >\r\n                      Get Weather\r\n                  </button>\r\n              </div>\r\n              <div className=\"line\"></div>\r\n              {this.state.showWeather?<SimpleSlider stateValue={this.state}/>:''}\r\n        </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Main/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}